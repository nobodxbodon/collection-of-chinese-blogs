using subprocess
using * in 原型.通用

同步 = "git pull"

// 待做：如有片段包含空格，如路径，会导致拆分出错
func 运行(命令) {
  return 运行所有(命令.split(" "))
}

func 运行所有(命令片段) {
    // println(命令)
    进程 = subprocess.run(命令片段,
      stdout=subprocess.PIPE,
      stderr=subprocess.PIPE)
    try {
      输出 = 进程.stdout.decode('utf-8')
      错误 = 进程.stderr.decode('utf-8')
      return { "输出": 输出, "错误": 错误 }
    } catch e : UnicodeDecodeError {
      return { "输出": "", "错误": e }
    }
}

func 下载仓库(路径, 仓库地址, 目标目录) {
    os.chdir(路径)
    运行("git clone `仓库地址` `目标目录`")
    println("已下载: `仓库地址`")
}

// 万一存在本地修改，直接 git checkout . 吗？
func 同步仓库 { return 运行(同步) }

func 取文件最初提交时间(仓库路径, 文件路径) {
  // 取时间戳需切换当前目录，先保存再恢复
  当前路径 = os.getcwd()
  os.chdir(仓库路径)
  原文字输出 = 运行所有(['git', 'log', 文件路径])['输出']
  os.chdir(当前路径)

  所有时间点 = list(
    map(行 -> 行[6:].strip(),
      filter(行 -> 行.startswith("Date:"),
              原文字输出.split("\n"))))
  return {
    '首': #所有时间点 > 0 ? 转换git时间格式(所有时间点[-1]) : nil,
    '尾': #所有时间点 > 1 ? 转换git时间格式(所有时间点[0]) : nil
  }
}
