using * in 原型.md相关
using * in 原型.简报定义

确认相等(格式.md, 简报结构.由表转换单个({'文件名': '测试.md'}).的格式)

确认相等("二月看展嘮叨", 文件名提取题目("2021-02-28-二月看展嘮叨.md"), "带时间戳md")
确认相等("测试", 文件名提取题目("测试.md"), "md扩展名")
确认相等("测试", 文件名提取题目("测试.mc"), "异常扩展名")

确认相等(["notes"], 取分类(简报结构.由表转换单个({'categories': 'Notes'})), "单个分类")
确认相等(["c1", "c2"], 取分类(简报结构.由表转换单个({'categories': '[c1, c2]'})), "两个分类")

确认相等("2024-03-11 23:21:44", 取时间戳(简报结构.由表转换单个({'date': "\"2024-03-11 23:21:44\""})), "带引号时间")
确认相等("July 27 2023", 取时间戳(简报结构.由表转换单个({'added': "\"July 27 2023\""})), "added带引号时间")

// 待加：需要尾开头有空格
/*确认相等("头 尾", 解析头部信息(
    "---\n"+
    "属性: 头\n"+
    "尾\n"+
    "---\n"
)['属性'])*/

确认相等("头: 尾", 解析头部信息(
    "---\n"+
    "属性: '头: 尾'\n"+
    "---\n"
)['属性'])

/*确认相等(" 尾", 解析头部信息(
    "---\n"+
    "属性: \n"+
    "尾\n"+
    "---\n"
)['属性'])*/

确认相等('Clubhouse 初体验', 解析头部信息(
"---\n"+
'title: "Clubhouse 初体验"\n'+
'date: 2021-02-25T20:10:25+08:00\n'+
"---\n"
)['title'])

确认相等('日语编程语言"抚子" - 第三版特色初探', 解析头部信息(
"---\n"+
'title:  日语编程语言"抚子" - 第三版特色初探\n'+
"---\n"
)['title'])

// 待清理：frontmatter 已去引号
确认相等('日语编程语言“抚子” - 第三版特色初探', 剔除引号('日语编程语言"抚子" - 第三版特色初探'))

确认相等('"西游记"主题Python入门示例尝试-数据结构 5.1-5.1.2', 解析头部信息(
"---\n"+
'title:  \'"西游记"主题Python入门示例尝试-数据结构 5.1-5.1.2\'\n'+
"---\n"
)['title'])

确认相等('“西游记”主题Python入门示例尝试-数据结构 5.1-5.1.2', 剔除引号('\'"西游记"主题Python入门示例尝试-数据结构 5.1-5.1.2\''))

确认相等('第一段', 解析头部信息(
"---\n"+
'title: "第一段"\n'+
"---\n"+
"---\n"+
'title: "第二段"\n'+
"---\n"
)['title'])

确认相等('仅头部无换行', 解析头部信息(
"---\n"+
'title: "仅头部无换行"\n'+
"---"
)['title'])

确认相等('July 27 2023', 解析头部信息(
"---\n" +
'added: "July 27 2023"\n' +
'tags: [web]\n' +
'updatedDate: "Oct 29 2023"\n' +
"---"
)['added'])

确认相等('带---号', 解析头部信息(
"---\n"+
'题目: "带---号"\n'+
"---\n"
)['题目'])

确认相等(['类 1'], 解析头部信息(
"---\n"+
'分类:\n'+
' - 类 1\n'+
"---\n"
)['分类'])

确认相等(['类1'], 解析头部信息(
"---\n"+
'分类:\n'+
'- 类1\n'+
"---\n"
)['分类'], "-前无空格")

确认相等(['类 1', '类 2'], 解析头部信息(
"---\n"+
'分类:\n'+
' - 类 1\n'+
' - 类 2\n'+
"---\n"
)['分类'])

确认相等({:}, 解析头部信息(
    "---\n"
))


确认相等({:}, 解析头部信息(
    "---\n"+
    "aaaaa"+
    "bbbbb"+
    "---\n"
))

// 待清理：子列表已输出为列表，不需再转换
确认相等(["类 1"], 取分类(简报结构.由表转换单个({'categories': '类 1'})))
确认相等(["类 1", "类 2"], 取分类(简报结构.由表转换单个({'categories': '[类 1, 类 2]'})))

确认相等(["类 3", "类 4"], 取分类(简报结构.由表转换单个({'categories': ' - 类 3 - 类 4'})))
