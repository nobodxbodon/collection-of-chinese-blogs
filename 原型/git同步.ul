using sys
using os
using subprocess

func 运行(命令) {
    进程 = subprocess.run(命令.split(" "), stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    return {
        "输出": 进程.stdout.decode('utf-8'),
        "错误": 进程.stderr.decode('utf-8')
    }
}

func 下载仓库(路径, 仓库地址) {
    os.chdir(路径); 运行("git clone `仓库地址`"); println("已下载: `仓库地址`")
}

仓库表 = {
    "https://github.com/1078503/blog": "ditou.org",
    "https://github.com/linonetwo/linonetwo.github.io": "onetwo.ren",
    "https://github.com/jalenchuh/blog": "blog.jalenchuh.cn",
    "https://github.com/vivaxyblog/vivaxyblog.github.io": "vivaxyblog.github.io",
    "https://gitee.com/jaredtao/jaredtao/tree/tao/": "jaredtao.gitee.io",
    "https://github.com/claude-ray/claude-ray.github.io": "claude-ray.github.io",
    "https://github.com/iphyer/iphyer.github.io": "iphyer.github.io",
    "https://github.com/mabbs/mabbs.github.io": "mabbs.github.io",
    "https://github.com/thewanderingpotato/thewanderingpotato.github.io": "thewanderingpotato.github.io",
    "https://github.com/zsqk/news": "zsqk.github.io",
    "https://github.com/luyuhuang/luyuhuang.github.io": "luyuhuang.github.io",
    "https://github.com/jasonkayzk/jasonkayzk.github.io": "jasonkayzk.github.io",
    "https://github.com/hh54188/jekyll-blog": "qingbob.com"
}

路径  = "/Users/xuanwu/git/聚聚/博客聚合/"
同步 = "git pull"

无法合并 = "fatal: refusing to merge unrelated histories\n"
无新内容 = "Already up-to-date.\n"

未变的库 = []
for 仓库地址 in 仓库表 {
    目标目录 = 仓库表[仓库地址]
    仓库本地路径 = 路径 + 目标目录

    已下载 = os.path.exists(仓库本地路径) and os.path.isdir(仓库本地路径)
    if 已下载 {
        os.chdir(仓库本地路径); 返回 = 运行(同步); 报错 = 返回["错误"]; 输出 = 返回["输出"];
        // println("报错: " + 报错)
        if 报错 == 无法合并 {
            println("无法合并: `仓库地址`")

            // TODO: 备份似乎无效
            os.rename(仓库本地路径, 仓库本地路径 + "_bak")
            下载仓库(路径, 仓库地址, 目标目录)
        } else {
            if 输出 == 无新内容 {
                未变的库.append(仓库地址)
            } else {
                println("`仓库地址`")
                print(输出)
            }
        }
    }
    else { 下载仓库(路径, 仓库地址, 目标目录) }
}
println(str(len(未变的库)) + "个库无新内容")
