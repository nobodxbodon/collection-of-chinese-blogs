using Enum in enum

type 格式 : Enum {
  {
    md = 1
    html = 2
    rst = 3
    其他 = 4
  }
}

type 简报结构 {
  func $简报结构 {
    // 统计、生成共用
    $头部信息 = {:}
    $仓库本地路径 = ''
    $文件名 = ''
    $路径 = ''
    $本地相对路径 = ''

    // 生成所需
    $仓库源地址 = ''
    $时间 = ''
    $更新时间 = ''
    $题目 = ''
    $网页 = ''
    $分类 = ''

    // 待做：注解 list [ 简报结构 ]
    $评论 = []
  }

  func $显示 {
    println("头部信息：" + str($头部信息))
    println("仓库本地路径：" + $仓库本地路径)
    println("文件名：" + $文件名)
    println("路径：" + $路径)
    println("本地相对路径：" + $本地相对路径)
    println("仓库源地址：" + $仓库源地址)
    println("时间：" + $时间)
    println("题目：" + $题目)
    println("网页：" + $网页)
    println("分类：" + str($分类))
  }

  func 由表转换(所有简报表) {
    所有简报 = []
    for 简报表 in 所有简报表 {
      所有简报.append(简报结构.由表转换单个(简报表))
    }
    return 所有简报
  }

  func 由表转换单个(简报表) {
    此简报 = 简报结构()
      for 键 in 简报表 {
        if 键 == '仓库本地路径' {
          此简报.仓库本地路径 = 简报表['仓库本地路径']
        } elif 键 == '文件名' {
          此简报.文件名 = 简报表['文件名']
        } elif 键 == '路径' {
          此简报.路径 = 简报表['路径']
        } elif 键 == '本地相对路径' {
          此简报.本地相对路径 = 简报表['本地相对路径']
        } elif 键 == '仓库源地址' {
          此简报.仓库源地址 = 简报表['仓库源地址']
        } else {
          此简报.头部信息[键] = 简报表[键]
        }
      }
      return 此简报
  }

  attr $的格式 {
    return 格式.html if $文件名.endswith(".html")
    return 格式.md if $文件名.endswith(".md") or $文件名.endswith(".markdown")
    return 格式.rst if $文件名.endswith(".rst")

    return 格式.其他
  }
}