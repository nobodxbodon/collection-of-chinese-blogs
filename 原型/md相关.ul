using re
using 取文件最初提交时间 in 原型.git功用

/* 将 md 头部两个 --- 之间的部分提取到字典 */
func 提取简报(文件名) {
  try 文件=open(文件名, 'r') {
    简报开始 = false
    简报表 = {:}
    for 行 in 文件 {
      行内容 = 行.strip()
      // println(行内容)
      if !简报开始 { 简报开始 = true if 行内容 == '---' }
      else {
        if 行内容 == '---' { return 简报表 }
        else {
          分段 = re.search("(\w+):\s+(.+)", 行内容)
          简报表[分段.group(1)] = 分段.group(2).strip() if 分段
        }
      }
    }
    return 简报表
  }
}

// 2020-04-30-vscode-conventional-commits-extension-cn.md
func 文件名提取时间戳(文件名) {
  分段 = re.search("(\d+-\d+-\d+).+", 文件名)
  return 分段 ? 分段.group(1) : ""
}

// 2021-02-28-二月看展嘮叨.md
func 文件名提取题目(文件名) {
  分段 = re.search("(\d+-\d+-\d+)-(.+)\.(md|markdown)$", 文件名)
  return 分段 ? 分段.group(2) : re.search("(.+)\.(md|markdown)$", 文件名).group(1)
}

func 剔除引号(文本) {
  分段 = re.search("\"(.*)\"", 文本)
  return 分段.group(1) if 分段
  分段 = re.search("'(.*)'", 文本)
  return 分段 ? 分段.group(1) : 文本
}

func 取时间戳(简报) {
  // TODO: 加入格式表
  if 简报.__contains__('date') {
    return 简报['date']
  } elif 简报.__contains__('modified') {
    return 简报['modified']
  } else {
    return 文件名提取时间戳(简报['文件名']) or 取文件最初提交时间(简报['仓库路径'], 简报['路径'])
  }
}

func 取题目(简报) {
  if 简报.__contains__('title') {
    题目 = 简报['title']
  } else {
    题目 = 文件名提取题目(简报['文件名'])
  }
  return 剔除引号(题目)
}

/*
文件名 = "原型/测试/test1.md"
print(提取简报(文件名))
*/