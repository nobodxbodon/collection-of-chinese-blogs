using os
using * in 原型.md相关
using * in 原型.通用

func 取所占空间(目录) {
    空间 = 0
    for 当前路径, 目录名, 所有文件 in os.walk(目录) {
        for 文件 in 所有文件 {
            文件路径 = os.path.join(当前路径, 文件)

            continue if os.path.islink(文件路径)
            try {
                文件大小 = os.path.getsize(文件路径)
            } catch e {
                print("取不了大小：`文件路径`")
            }

            空间 += 文件大小
        }
    }
    return 空间/1000000
}

统计数据 = []
for 仓库地址 in 仓库表 {
    目标目录 = 仓库表[仓库地址]
    格式 = 格式表[仓库地址]
    仓库本地路径 = os.path.join(路径, 目标目录, 路径表[格式])

    所占空间 = 取所占空间(os.path.join(路径, 目标目录))
    文件个数 = 0
    所有简报 = []
    for 当前路径, 目录名, 所有文件 in os.walk(仓库本地路径) {
        for 文件 in 所有文件 {
            文件路径 = os.path.join(当前路径, 文件)
            if 文件路径.endswith(".md") or 文件路径.endswith(".markdown") {
              文件个数 += 1
              简报 = 提取简报(文件路径)
              简报['仓库路径'] = 仓库本地路径
              简报['文件名'] = 文件
              简报['路径'] = 文件路径
              所有简报.append(简报)
            }
        }
    }
    //println("`目标目录`: `所有简报`")
    
    更新时间 = ""
    最新博文 = ""
    for 简报 in 所有简报 {
        时间戳 =  取时间戳(简报)
        if 更新时间 < 时间戳 {
          更新时间 = 时间戳
          最新博文 = 取题目(简报)
        }

    }
    
    统计数据.append(tuple(目标目录, 文件个数, 所占空间, 更新时间, 最新博文))
    println("`目标目录` 无 md 文件！") if 文件个数 == 0
}

写入csv文件("原型/统计数据.csv", 统计数据)

总占用空间, 总博文数, 总博客数 = 0, 0, 0

for 数据 in 统计数据 {
  总占用空间 += 数据[2]
  总博客数 += 1
  总博文数 += 数据[1]
}

println("`总博客数` 个博客, `总博文数` 篇博文, 占用空间 `总占用空间/1000.0` GB")
